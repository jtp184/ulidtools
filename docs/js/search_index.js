var search_data = {"index":{"searchIndex":["ulidtools","ulid","<=>()","generate()","new()","to_s()","to_str()","to_uuid()"],"longSearchIndex":["ulidtools","ulidtools::ulid","ulidtools::ulid#<=>()","ulidtools::generate()","ulidtools::ulid::new()","ulidtools::ulid#to_s()","ulidtools::ulid#to_str()","ulidtools::ulid#to_uuid()"],"info":[["ULIDTools","","ULIDTools.html","","<p>A Gem for manipulating ULIDs\n"],["ULIDTools::ULID","","ULIDTools/ULID.html","","<p>The ULID class keeps an internal bytestring representation of itself and facilitates other representations. …\n"],["<=>","ULIDTools::ULID","ULIDTools/ULID.html#method-i-3C-3D-3E","(other)","<p>Compares to <code>other</code> via the ULID#raw method\n"],["generate","ULIDTools","ULIDTools.html#method-c-generate","()","<p>Shortcut to ULID#new\n"],["new","ULIDTools::ULID","ULIDTools/ULID.html#method-c-new","(opts = {})","<p>the <code>opts</code> array can directly set the <code>raw</code> or accept a :time key to Use a time other than Time.now to generate …\n"],["to_s","ULIDTools::ULID","ULIDTools/ULID.html#method-i-to_s","()","<p>Uses the Crockford library to encode the ULID\n"],["to_str","ULIDTools::ULID","ULIDTools/ULID.html#method-i-to_str","()","<p>For implicit string conversion\n"],["to_uuid","ULIDTools::ULID","ULIDTools/ULID.html#method-i-to_uuid","()","<p>Outputs the ULID packed instead as a UUID\n"]]}}